//struts的Action 3种使用方式
  1.正常创建类即可，不继承实现任何类和接口
  2.实现Action接口
  3.继承ActionSupport类
 
//一个模块使用一个Action
//  *表示路径的通配符
  <action name="user_*" class="action.LoginAction" method="{1}">
        <result name="{1}">/{1}.jsp</result>
     </action>
     
//多个模块使用一个Action    
   <action name="*_*" class="action.{1}Action" method="{2}">
        <result name="{2}">/{1}/{2}.jsp</result>
     </action>
     
//更改后缀,在struts.xml中
 <constant name="struts.action.extension" value="action,do"></constant>

//动态方法调用规则
  当action中没有指定方法，可以在浏览器中输入  !方法名  来指定调用方法
//关闭动态方法调用，防止方法名暴露
  <constant name="struts.enable.DynamicMethodInvocation" value="false"></constant>
  
//全局配置
  即当action中result name和jsp相同时
  <global-results>
   <result name="success">/login.jsp</result>
  </global-results>
  
//action注入,在struts.xml，在action中添加标签
  <param name="">e:/images</param>
  并在类中构建set方法
  
//请求数据参数封装
    
